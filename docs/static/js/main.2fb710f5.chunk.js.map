{"version":3,"sources":["components/AgregarCategoria/AgregarCategoria.js","helpers/getGifs.js","components/GifItem/GifItem.js","components/GifGrid/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp/GifExpertApp.js","index.js"],"names":["AgregarCategoria","props","setCategorias","useState","valor","setValor","onSubmit","e","preventDefault","trim","length","categoria","window","alert","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifItem","imagen","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagenes","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"6RAoCeA,EAjCU,SAACC,GAEtB,IAAMC,EAAgBD,EAAMC,cAFI,EAINC,mBAAS,IAJH,mBAIzBC,EAJyB,KAIlBC,EAJkB,KAuBhC,OACI,sBAAMC,SAdU,SAACC,GAEjBA,EAAEC,iBAECJ,EAAMK,OAAOC,OAAS,GACrBR,GAAe,SAAAS,GAAS,OAAKP,GAAL,mBAAeO,OACvCN,EAAS,KAETO,OAAOC,MAAM,oGAMjB,SACI,uBAAOC,KAAK,OACLC,MAAOX,EACPY,SArBK,SAACT,GACjBF,EAASE,EAAEU,OAAOF,a,uBCTbG,EAAO,uCAAG,WAAOP,GAAP,uBAAAQ,EAAA,6DACbC,EADa,0FAC6EC,UAAUV,GADvF,sBAEKW,MAAMF,GAFX,cAEbG,EAFa,gBAGEA,EAAUC,OAHZ,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCeLO,G,MAbC,SAAChC,GAAW,IAAD,EAEFA,EAAMiC,OAApBJ,EAFgB,EAEhBA,MAAOV,EAFS,EAETA,IAEd,OACI,sBAAKe,UAAU,6CAAf,UACI,qBAAKC,IAAKhB,EAAKiB,IAAKP,IACpB,6BAAKA,SCqBFQ,G,MAzBC,SAACrC,GAEb,IAAMU,EAAYV,EAAMU,UAFD,ECHC,SAACA,GAAe,IAAD,EAEbR,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAiBvC,OAVAC,qBAAW,WACPxB,EAAQP,GACHgC,MAAM,SAAAC,GACHH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGtB,CAAC5B,IAEG6B,EDV0BK,CAAalC,GAAlCmC,EAJW,EAIhBrB,KAAec,EAJC,EAIDA,QAGtB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAoDxB,IAE/C4B,GAAW,mBAAGJ,UAAU,uCAAb,yBAEZ,qBAAKA,UAAU,YAAf,SAEQW,EAASnB,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,CAAsBM,OAAQN,GAAhBA,EAAIC,cEO3BkB,G,MAvBM,WAAO,IAAD,EAEa5C,mBAAS,CAAC,cAFvB,mBAEhB6C,EAFgB,KAEJ9C,EAFI,KAKvB,OACI,qCACI,sEACA,cAAC,EAAD,CAAkBA,cAAgBA,IAClC,uBACA,6BAEQ8C,EAAWrB,KAAK,SAAAhB,GACZ,OAAO,cAAC,EAAD,CAAyBA,UAAWA,GAAtBA,a,MCb7CsC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2fb710f5.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './AgregarCategoria.css';\n\nconst AgregarCategoria = (props) => {\n\n    const setCategorias = props.setCategorias;\n\n    const [valor, setValor] = useState('');\n\n    const cambioValor = (e) => {\n        setValor(e.target.value);\n    }\n\n    const enviarDatos = (e) => {\n\n        e.preventDefault();\n\n        if(valor.trim().length > 2){\n            setCategorias( categoria => [valor, ...categoria]);\n            setValor('');\n        }else{\n            window.alert('Campo inválido, la información no puede ir vacía y debe tener más de dos caracteres');\n        }\n        \n    }\n\n    return (\n        <form onSubmit={enviarDatos}>\n            <input type=\"text\"\n                   value={valor}\n                   onChange={cambioValor}/>\n        </form>\n    )\n\n}\n\nexport default AgregarCategoria;","\nexport const getGifs = async (categoria) => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=bVrOqs7Q9JQlGl2L2xnUbd4ddnALsSKE&q=${ encodeURI(categoria) }&limit=10`;\n    const respuesta = await fetch(url);\n    const {data} = await respuesta.json();\n\n    const gifs = data.map( img => {\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n    return gifs;\n\n}","import React from 'react';\nimport './GifItem.css';\n\nconst GifItem = (props) => {\n\n    const {title, url} = props.imagen;\n\n    return(\n        <div className=\"card animate__animated animate__backInLeft\">\n            <img src={url} alt={title}/>\n            <h4>{title}</h4>\n        </div>\n    )\n\n}\n\nexport default GifItem;","import React from 'react';\nimport { useFetchGifs } from '../../hooks/useFetchGifs';\nimport GifItem  from '../GifItem';\nimport './GifGrid.css';\n\n\nconst GifGrid = (props) => {\n\n    const categoria = props.categoria;\n\n    const {data:imagenes, loading} = useFetchGifs(categoria);\n\n\n    return(\n        <>\n        <h3 className=\"animate__animated animate__bounce\">{ categoria }</h3>\n\n            {loading && <p className=\"animate__animated animate__heartBeat\">Cargando...</p>}\n\n            <div className=\"card-grid\">\n                {\n                    imagenes.map( img => (\n                        <GifItem key={img.id} imagen={img}/>\n                    ))\n                }\n            </div>\n        </>\n    );\n\n}\n\nexport default GifGrid;","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (categoria) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs(categoria)\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            });\n    }, [categoria]);\n\n    return state;\n\n}","import  React, { useState } from \"react\";\nimport AgregarCategoria from \"../AgregarCategoria/AgregarCategoria\";\nimport GifGrid from \"../GifGrid\";\nimport './GifExpertApp.css';\n\n\nconst GifExpertApp = () => {\n\n    const [categorias, setCategorias] = useState(['Star wars']);\n\n\n    return(\n        <>\n            <h2>Gif Expert App by Erick Marroquín</h2>\n            <AgregarCategoria setCategorias={ setCategorias }/>\n            <hr />\n            <ol>\n                {\n                    categorias.map( categoria => {\n                        return <GifGrid key={categoria} categoria={categoria}/>\n                    })\n                }\n            </ol>\n        </>\n    );\n\n}\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp  from './components/GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}